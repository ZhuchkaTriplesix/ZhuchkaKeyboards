version: '3.5'

services:
  db:
    image: postgres:15-alpine
    container_name: postgres-keyboards
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=zhuchechka
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=zhuchka
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zhuchechka -d zhuchka"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: redis-keyboards
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  migrations:
    build: ./gateway
    container_name: gateway-migrations-keyboards
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=zhuchechka
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=zhuchka
      - DATABASE_URL=postgresql+asyncpg://zhuchechka:root@db:5432/zhuchka
    command: ["sh", "-c", "cd /app/src/database && alembic -c alembic.ini upgrade head"]
    profiles:
      - migrate

  gateway:
    build: ./gateway
    container_name: gateway-keyboards
    ports:
      - '8001:8001'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=zhuchechka
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=zhuchka
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql+asyncpg://zhuchechka:root@db:5432/zhuchka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: ./frontend/zhuchka_flutter
    container_name: frontend-keyboards
    ports:
      - '8080:80'
    environment:
      - API_BASE_URL=http://gateway:8001
    depends_on:
      gateway:
        condition: service_healthy

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-keyboards
    ports:
      - '9090:9090'
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - gateway
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-keyboards
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    profiles:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: loki-keyboards
    ports:
      - '3100:3100'
    volumes:
      - ./monitoring/loki:/etc/loki
      - loki_data:/loki
    command: -config.file=/etc/loki/loki-config.yml
    profiles:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: promtail-keyboards
    volumes:
      - ./monitoring/promtail:/etc/promtail
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail-config.yml
    depends_on:
      - loki
    profiles:
      - monitoring

  # Exporters for additional metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter-keyboards
    ports:
      - '9187:9187'
    environment:
      - DATA_SOURCE_NAME=postgresql://zhuchechka:root@db:5432/zhuchka?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - monitoring

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter-keyboards
    ports:
      - '9121:9121'
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    profiles:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter-keyboards
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    profiles:
      - monitoring

volumes:
  pgdata:
  redisdata:
  prometheus_data:
  grafana_data:
  loki_data: 